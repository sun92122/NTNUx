import{I as l}from"./BL3XqLIb.js";function j(){const a=l("terms",()=>[]),e=l("currentTerm",()=>null),u=l("loadTermData"),s=l("rowDatas",()=>({})),r=l("rowData",()=>[]),c=l("loading",()=>!0),v=["course_name","teacher","serial_no"],m=async n=>{const t=await fetch(`data/${e.value}/${n}.min.json`);if(!t.ok)return null;const i=await t.json();return i.length===0?null:i.map(o=>({...o,course_name:o.chn_name.replace(/<\/br>.*/g,""),time:d(o.time_loc),location:w(o.time_loc),teacher:p(o.teacher),generalCore:o.generalCore.join("/")}))},h=async()=>{const n=[];for(let t=0;t<10;t++)n.push(m(t));for await(const t of n)t&&(r.value=r.value.concat(t),c.value=!1)},f=async()=>{if(c.value=!0,s.value[e.value]){r.value=s.value[e.value],c.value=!1;return}r.value=[],await h(),s.value[e.value]=r.value};return{terms:a,currentTerm:e,rowData:r,loading:c,reloadCurrentTerm:f,defultGlobalFilterFields:v,initTermData:async n=>{if(a.value.length>0){c.value=!1;return}const i=await(await fetch("/data/terms.json")).json();a.value=i.terms,e.value=n.query.term,(!e.value||a.value.indexOf(e.value)===-1)&&(e.value=i.defaultValue),u.value=f,await f()}}}function p(a){return a.replace("","温")}function d(a){return typeof a=="string"?a:Object.entries(a).map(([e,u])=>e).join("/")}function w(a){if(typeof a=="string")return null;const e=Object.values(a).filter(s=>s!==""),u=[...new Set(e)];return u.length===1?u[0]:e.join("/")}export{j as u};
